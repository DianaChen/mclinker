; ModuleID = 'main.c'
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:32-i16:16:32-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-n32-S64"
target triple = "mipsel--linux-gnu"

%struct.stat = type { i64, i16, i32, i32, i32, i32, i32, i64, i16, i32, i32, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32 }
%struct.timespec = type { i32, i32 }

@environ = external global i8**
@.str = private unnamed_addr constant [6 x i8] c"a.out\00", align 1
@.str1 = private unnamed_addr constant [10 x i8] c"Bye, bye.\00", align 1
@.str2 = private unnamed_addr constant [14 x i8] c"Hello, World!\00", align 1

; Function Attrs: nounwind
define i32 @main() #0 {
  %1 = alloca i32, align 4
  %sb = alloca %struct.stat, align 8
  store i32 0, i32* %1
  call void @foo()
  %2 = load i8*** @environ, align 4
  %3 = load i8** %2, align 4
  %4 = call i32 @puts(i8* %3)
  %5 = call i32 @stat(i8* getelementptr inbounds ([6 x i8]* @.str, i32 0, i32 0), %struct.stat* %sb) #2
  %6 = call i32 @puts(i8* getelementptr inbounds ([10 x i8]* @.str1, i32 0, i32 0))
  %7 = call i32 @bar()
  %8 = sub nsw i32 %7, 3
  ret i32 %8
}

declare i32 @puts(i8*) #1

; Function Attrs: nounwind
declare i32 @stat(i8*, %struct.stat*) #0

declare i32 @bar() #1

; Function Attrs: nounwind
define internal void @foo() #0 {
  %1 = call i32 @puts(i8* getelementptr inbounds ([14 x i8]* @.str2, i32 0, i32 0))
  ret void
}

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

2012-05-11 Chinyen Chou <petechou@gmail.com>
	* Executive Summary:
	In this version: flames, we add the following new features in MCLinker:
	1. -z options support (except for -z combreloc)
	2. Thumb/Thumb2 mode support.
	3. DWARF debugging support.
	4. Introduce an expressive Diagnostic system to print out linking error message.
	5. Executable files generation (examined on ARM/MIPS Android).

	* patch/LLVM.Patch:
	Complement llvm/Support/ELF.h for ELF segments and .dynamic sections.

	* Target/ARMLDBackend, Target/ARM/Relocation:
	Add thumb/thumb2 mode support.

	* MC/MCLDOptions, MC/ZOption, Support/CommandLine, llvm-mcld.cpp:
	1. Add -z options, -Bgroup, --dynamic-linker= and -shared
	2. Add --verbose[=0,1,2], --error-limit[=N], --warning-limit[=N],
	   --color[=never, always, auto] and --no-undefined

	* Target/ELFDynamic:
	Set DT_FLAGS and DT_FLAGS_1 based on the given -z option.

	* LD/Layout, Target/GNULDBackend, Target/TargetLDBackend,
	  Target/ARMLDBackend, Target/X86LDBackend, Target/MipsLDBackend,
	  MC/MCLinker:
	Support -z relro for PT_GNU_RELRO segment.

	* docs/llvm-mcld.pod:
	Add perldoc for man page.

	* Target/GNULDBackend:
	Support -z execstack/noexecstack for PT_GNU_STACK segment.

	* Target/ARMLDBackend:
	Support -z copyreloc in ARMLDBackend.

	* LD/ELFExecWriter, LD/ExecWriter, LD/ELFExecFileFormat, LD/Layout,
	Target/GNULDBackend, Target/TargetLDBackend, MC/MCLDDriver, llvm-mcld.cpp:
	Support executable generation.
	1. "Hello World" is examined successfully on ARM/MIPS Android.
	2. Some SPECCPU examples are also examined on ARM Android.

	* Target/MipsLDBackend:
	Android Quake2 JNI example is examined successfully.

	* LD/ELFReader, MC/MCLinker, Target/TargetLDBackend, LD/ELFDynObjWriter,
	  LD/ELFExecWriter, LD/Layout, Target/ARMLDBackend, Target/X86LDBackend,
	  Target/MipsLDBackend:
	Support DWARF debug sections linking.
	1. GDB can debug the MCLinker output object. e.g., ndk-gdb in Android.

	* LD/DiagnosticInfos, LD/Diagnostic, LD/MsgHandler, LD/DiagnosticPrinter,
	  LD/TextDiagnosticPrinter, LD/DiagnosticEngine, Support/MsgHandling:
	Introduce an expressive Diagnostic system.

	* LD/Resolver, LD/StaticResolver, LD/NamePool:
	Changed to use new Diagnostic System.

2012-03-14 Luba Tang <lubatang@gmail.com>
	* Migrate on LLVM@r152063
	* Migrate on clang@r152062

	* LD/LDSection, LD/ELFFileFormat, LD/ELFDynObjFileFormat,
	  LD/ELFExecFileFormat:
	Support setting alignment constraint in section header.
	* LD/Layout:
	Update sections' alignment constraints during section merging. 

	* Support/MemoryArea, Support/MemoryRegion:
	Enhance memory utilities. 

	* Target/ARMLDBackend:
	1. work around ARM.exidx and ARM.extab.
	2. add relocation supports - R_ARM_TARGET1, R_ARM_TARGET2, R_ARM_ABS32, 
	R_ARM_BASE_PREL, and R_ARM_GOT_PREL

	* Target/MipsLDBackend:
	1. Android bitmap, native Plasma and Quake1 is examined successfully.

	* Target/GNULDBackend, LD/ELFSegmentFactory:
	Move segment-related implemenation out of GNULDBackend.

	* Support/ScopedWriter:
	Obsolete, removed.

	* MC/SymbolCategory:
	add random accessing functions

2012-03-01 Luba Tang <lubatang@gmail.com>
	* add test/ARM/Relocation:
	* add test/ARM/GOTPLT:
	Simple regression testcases. Each case is used for testing a single
	relocation or GOTPLT entry.

	* add test/Android/Plasma/ARM, X86, MIPS:
	* add test/Android/Quake/ARM, X86:
	* add test/Android/Quake2/ARM, X86:
	Basic regression testcases for Android platform. The system libraries
	for each platform are under test/libs/ARM, X86, MIPS.

	* Target/TargetLDBackend:
	separate readSections() into readRegularSection() and
	readTargetSection().

	* Target/GNULDBackend:
	Move hash_bucket_count() and isDynamicSymbol() on successors.

	* Target/MipsLDBackend: Eable to link trivial cases and Android Plasma.
	* Target/X86LDBackend: Eable to link all Android JNI cases with CRT.

	* CodeGen/SectLinkerOption, llvm-mcld.cpp:
	get rid of -dB option. MCLinker does not need to ask users for -dB
	option.

	* MC/MCLinker, LD/ELFObjectReader, LD/ELFObjectWriter:
	Support symbol visibility.

	* LD/LDSection: Separate LinkInfo into Link and Info. 

	* LD/Relocation:
	In order to enhance memory footprints:
	1. Remove Relocation::m_Parent.
	2. Let target data be a copy, not a pointer.

	* LD/ELFReader, LD/ObjectReader, LD/ELFObjectReader, LD/Layout:
	Support GROUPT section.

	* LD/LDFileFormat:
	Support all special sections listed in Linux Standard Base
	(ISO/IEC 23360).

	* Support/GCFactoryListTraits:
	Provides GCFactory's trait for llvm::iplist.

	* Support/LEB128: Add LEB128 utilities.

	* Support/HashTable:
	Identify ambiguous constructors by adding an anonyous parameter.

	* Suppot/MemoryRegion, Support/MemoryArea:
	1. remove pIsWrite parameter in MemoryArea::request(). MemoryArea knows
	the file is readable or writable when map() the file.
	2. MemoryArea allows to request a zero size MemoryRegion.

	* patch/LLVM.patch: complement llvm/Support/ELF.h.
	Add SHT_GNU_ATTRIBUTES, SHT_GNU_HASH, SHT_GNU_verdef, SHT_GNU_verneed,
	and SHT_GNU_versym.

	* LD/Layout:
	1. Work around LDFileFormat::Exception and LDFileFormat::Version.
	2. appendFragment(): Support merging sections with different alignment
	constraints.

2012-02-03 Luba Tang <lubatang@gmail.com>
	* allocate common symbols in BSS section
	* add ThreadLocal type in ResolveInfo::Type
	* Quake2 can be linked on ARM Android.

2012-02-02 Luba Tang <lubatang@gmail.com>
	* Quake can be linked on x86 Android.

2012-01-17 Luba Tang <lubatang@gmail.com>
	* Quake can be linked on ARM Android.
	* All APIs for backends is ready.

2012-01-12 Jush Lu <Jush.Lu@mediatek.com>
	* Trivial cases have worked on ARM.

2011-05-23 Luba Tang <lubatang@gmail.com>
	* create all basic files and directories.
